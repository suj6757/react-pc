{"ast":null,"code":"import _slicedToArray from \"C:/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\react-pc\\\\src\\\\views\\\\user\\\\reset-password.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { resetPassword } from '../../redux/actions';\nimport { NotificationManager } from '../../components/common/react-notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar validateNewPassword = function validateNewPassword(values) {\n  var newPassword = values.newPassword,\n      newPasswordAgain = values.newPasswordAgain;\n  var errors = {};\n\n  if (newPasswordAgain && newPassword !== newPasswordAgain) {\n    errors.newPasswordAgain = 'Please check your new password';\n  }\n\n  return errors;\n};\n\nvar ResetPassword = function ResetPassword(_ref) {\n  _s();\n\n  var location = _ref.location,\n      history = _ref.history,\n      loading = _ref.loading,\n      error = _ref.error,\n      resetPasswordAction = _ref.resetPasswordAction;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 1),\n      newPassword = _useState2[0];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 1),\n      newPasswordAgain = _useState4[0];\n\n  useEffect(function () {\n    if (error) {\n      NotificationManager.warning(error, 'Forgot Password Error', 3000, null, null, '');\n    } else if (!loading && newPassword === 'success') NotificationManager.success('Please login with your new password.', 'Reset Password Success', 3000, null, null, '');\n  }, [error, loading, newPassword]);\n\n  var onResetPassword = function onResetPassword(values) {\n    if (!loading) {\n      var params = new URLSearchParams(location.search);\n      var oobCode = params.get('oobCode');\n\n      if (oobCode) {\n        if (values.newPassword !== '') {\n          resetPasswordAction({\n            newPassword: values.newPassword,\n            resetPasswordCode: oobCode,\n            history: history\n          });\n        }\n      } else {\n        NotificationManager.warning('Please check your email url.', 'Reset Password Error', 3000, null, null, '');\n      }\n    }\n  };\n\n  var initialValues = {\n    newPassword: newPassword,\n    newPasswordAgain: newPasswordAgain\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"h-100\",\n    children: /*#__PURE__*/_jsxDEV(Colxx, {\n      xxs: \"12\",\n      md: \"10\",\n      className: \"mx-auto my-auto\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative image-side \",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white h2\",\n            children: \"MAGIC IS IN THE DETAILS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"white mb-0\",\n            children: [\"Please use your e-mail to reset your password. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 62\n            }, _this), \"If you are not a member, please\", ' ', /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/register\",\n              className: \"white\",\n              children: \"register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, _this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-side\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            className: \"white\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-single\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n              id: \"user.reset-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n            validate: validateNewPassword,\n            initialValues: initialValues,\n            onSubmit: onResetPassword,\n            children: function children(_ref2) {\n              var errors = _ref2.errors,\n                  touched = _ref2.touched;\n              return /*#__PURE__*/_jsxDEV(Form, {\n                className: \"av-tooltip tooltip-label-bottom\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group has-float-label\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                      id: \"user.new-password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control\",\n                    name: \"newPassword\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group has-float-label\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                      id: \"user.new-password-again\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control\",\n                    name: \"newPasswordAgain\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, _this), errors.newPasswordAgain && touched.newPasswordAgain && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback d-block\",\n                    children: errors.newPasswordAgain\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                    to: \"/user/login\",\n                    children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                      id: \"user.login-title\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    className: \"btn-shadow btn-multiple-state \".concat(loading ? 'show-spinner' : ''),\n                    size: \"lg\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"spinner d-inline-block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bounce1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bounce2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bounce3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                        id: \"user.reset-password-button\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ResetPassword, \"eEeSJP3Eeg0P8bscSZQ0yHVU89U=\");\n\n_c = ResetPassword;\n\nvar mapStateToProps = function mapStateToProps(_ref3) {\n  var authUser = _ref3.authUser;\n  var newPassword = authUser.newPassword,\n      resetPasswordCode = authUser.resetPasswordCode,\n      loading = authUser.loading,\n      error = authUser.error;\n  return {\n    newPassword: newPassword,\n    resetPasswordCode: resetPasswordCode,\n    loading: loading,\n    error: error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  resetPasswordAction: resetPassword\n})(ResetPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/react-pc/src/views/user/reset-password.js"],"names":["React","useState","useEffect","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","Formik","Form","Field","connect","Colxx","IntlMessages","resetPassword","NotificationManager","validateNewPassword","values","newPassword","newPasswordAgain","errors","ResetPassword","location","history","loading","error","resetPasswordAction","warning","success","onResetPassword","params","URLSearchParams","search","oobCode","get","resetPasswordCode","initialValues","touched","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { resetPassword } from '../../redux/actions';\r\nimport { NotificationManager } from '../../components/common/react-notifications';\r\n\r\nconst validateNewPassword = (values) => {\r\n  const { newPassword, newPasswordAgain } = values;\r\n  const errors = {};\r\n  if (newPasswordAgain && newPassword !== newPasswordAgain) {\r\n    errors.newPasswordAgain = 'Please check your new password';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst ResetPassword = ({\r\n  location,\r\n  history,\r\n  loading,\r\n  error,\r\n  resetPasswordAction,\r\n}) => {\r\n  const [newPassword] = useState('');\r\n  const [newPasswordAgain] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      NotificationManager.warning(\r\n        error,\r\n        'Forgot Password Error',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n    } else if (!loading && newPassword === 'success')\r\n      NotificationManager.success(\r\n        'Please login with your new password.',\r\n        'Reset Password Success',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n  }, [error, loading, newPassword]);\r\n\r\n  const onResetPassword = (values) => {\r\n    if (!loading) {\r\n      const params = new URLSearchParams(location.search);\r\n      const oobCode = params.get('oobCode');\r\n      if (oobCode) {\r\n        if (values.newPassword !== '') {\r\n          resetPasswordAction({\r\n            newPassword: values.newPassword,\r\n            resetPasswordCode: oobCode,\r\n            history,\r\n          });\r\n        }\r\n      } else {\r\n        NotificationManager.warning(\r\n          'Please check your email url.',\r\n          'Reset Password Error',\r\n          3000,\r\n          null,\r\n          null,\r\n          ''\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const initialValues = { newPassword, newPasswordAgain };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n            <p className=\"white mb-0\">\r\n              Please use your e-mail to reset your password. <br />\r\n              If you are not a member, please{' '}\r\n              <NavLink to=\"/register\" className=\"white\">\r\n                register\r\n              </NavLink>\r\n              .\r\n            </p>\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">\r\n              <IntlMessages id=\"user.reset-password\" />\r\n            </CardTitle>\r\n\r\n            <Formik\r\n              validate={validateNewPassword}\r\n              initialValues={initialValues}\r\n              onSubmit={onResetPassword}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>\r\n                      <IntlMessages id=\"user.new-password\" />\r\n                    </Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"newPassword\"\r\n                      type=\"password\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>\r\n                      <IntlMessages id=\"user.new-password-again\" />\r\n                    </Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"newPasswordAgain\"\r\n                      type=\"password\"\r\n                    />\r\n                    {errors.newPasswordAgain && touched.newPasswordAgain && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.newPasswordAgain}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <NavLink to=\"/user/login\">\r\n                      <IntlMessages id=\"user.login-title\" />\r\n                    </NavLink>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? 'show-spinner' : ''\r\n                      }`}\r\n                      size=\"lg\"\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        <IntlMessages id=\"user.reset-password-button\" />\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { newPassword, resetPasswordCode, loading, error } = authUser;\r\n  return { newPassword, resetPasswordCode, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  resetPasswordAction: resetPassword,\r\n})(ResetPassword);\r\n"]},"metadata":{},"sourceType":"module"}