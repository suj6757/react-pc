{"ast":null,"code":"/* eslint-disable no-bitwise */\nimport { EventEmitter } from 'events';\n\nconst createUUID = () => {\n  const pattern = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n  return pattern.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\nconst Constants = {\n  CHANGE: 'change',\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error'\n};\n\nclass NotificationManager extends EventEmitter {\n  constructor() {\n    super();\n    this.listNotify = [];\n  }\n\n  create(notify) {\n    const defaultNotify = {\n      id: createUUID(),\n      type: 'info',\n      title: null,\n      message: null,\n      timeOut: 5000,\n      customClassName: ''\n    };\n\n    if (notify.priority) {\n      this.listNotify.unshift(Object.assign(defaultNotify, notify));\n    } else {\n      this.listNotify.push(Object.assign(defaultNotify, notify));\n    }\n\n    this.emitChange();\n  }\n\n  primary(message, title, timeOut, onClick, priority, customClassName) {\n    this.create({\n      type: Constants.PRIMARY,\n      message,\n      title,\n      timeOut,\n      onClick,\n      priority,\n      customClassName\n    });\n  }\n\n  secondary(message, title, timeOut, onClick, priority, customClassName) {\n    this.create({\n      type: Constants.SECONDARY,\n      message,\n      title,\n      timeOut,\n      onClick,\n      priority,\n      customClassName\n    });\n  }\n\n  info(message, title, timeOut, onClick, priority, customClassName) {\n    this.create({\n      type: Constants.INFO,\n      message,\n      title,\n      timeOut,\n      onClick,\n      priority,\n      customClassName\n    });\n  }\n\n  success(message, title, timeOut, onClick, priority, customClassName) {\n    this.create({\n      type: Constants.SUCCESS,\n      message,\n      title,\n      timeOut,\n      onClick,\n      priority,\n      customClassName\n    });\n  }\n\n  warning(message, title, timeOut, onClick, priority, customClassName) {\n    this.create({\n      type: Constants.WARNING,\n      message,\n      title,\n      timeOut,\n      onClick,\n      priority,\n      customClassName\n    });\n  }\n\n  error(message, title, timeOut, onClick, priority, customClassName) {\n    this.create({\n      type: Constants.ERROR,\n      message,\n      title,\n      timeOut,\n      onClick,\n      priority,\n      customClassName\n    });\n  }\n\n  remove(notification) {\n    this.listNotify = this.listNotify.filter(n => notification.id !== n.id);\n    this.emitChange();\n  }\n\n  emitChange() {\n    this.emit(Constants.CHANGE, this.listNotify);\n  }\n\n  addChangeListener(callback) {\n    this.addListener(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n\n}\n\nexport default new NotificationManager();","map":{"version":3,"sources":["C:/react-pc/src/components/common/react-notifications/NotificationManager.js"],"names":["EventEmitter","createUUID","pattern","replace","c","r","Math","random","v","toString","Constants","CHANGE","PRIMARY","SECONDARY","INFO","SUCCESS","WARNING","ERROR","NotificationManager","constructor","listNotify","create","notify","defaultNotify","id","type","title","message","timeOut","customClassName","priority","unshift","Object","assign","push","emitChange","primary","onClick","secondary","info","success","warning","error","remove","notification","filter","n","emit","addChangeListener","callback","addListener","removeChangeListener","removeListener"],"mappings":"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","sourcesContent":["/* eslint-disable no-bitwise */\r\nimport { EventEmitter } from 'events';\r\n\r\nconst createUUID = () => {\r\n  const pattern = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n  return pattern.replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nconst Constants = {\r\n  CHANGE: 'change',\r\n  PRIMARY: 'primary',\r\n  SECONDARY: 'secondary',\r\n  INFO: 'info',\r\n  SUCCESS: 'success',\r\n  WARNING: 'warning',\r\n  ERROR: 'error',\r\n};\r\n\r\nclass NotificationManager extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.listNotify = [];\r\n  }\r\n\r\n  create(notify) {\r\n    const defaultNotify = {\r\n      id: createUUID(),\r\n      type: 'info',\r\n      title: null,\r\n      message: null,\r\n      timeOut: 5000,\r\n      customClassName: '',\r\n    };\r\n    if (notify.priority) {\r\n      this.listNotify.unshift(Object.assign(defaultNotify, notify));\r\n    } else {\r\n      this.listNotify.push(Object.assign(defaultNotify, notify));\r\n    }\r\n    this.emitChange();\r\n  }\r\n\r\n  primary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.PRIMARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  secondary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SECONDARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  info(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.INFO,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  success(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SUCCESS,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  warning(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.WARNING,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  error(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.ERROR,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  remove(notification) {\r\n    this.listNotify = this.listNotify.filter((n) => notification.id !== n.id);\r\n    this.emitChange();\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(Constants.CHANGE, this.listNotify);\r\n  }\r\n\r\n  addChangeListener(callback) {\r\n    this.addListener(Constants.CHANGE, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(Constants.CHANGE, callback);\r\n  }\r\n}\r\n\r\nexport default new NotificationManager();\r\n"]},"metadata":{},"sourceType":"module"}