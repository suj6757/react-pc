{"ast":null,"code":"import _regeneratorRuntime from \"C:/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getTodoListItems),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addTodoItem),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(wathcAddItem),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { getDateWithFormat } from '../../helpers/Utils';\nimport { TODO_GET_LIST, TODO_ADD_ITEM } from '../actions';\nimport { getTodoListSuccess, getTodoListError, addTodoItemSuccess, addTodoItemError } from './actions';\nimport todoData from '../../data/todos.json';\n\nvar getTodoListRequest = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new Promise(function (success) {\n              setTimeout(function () {\n                success(todoData.data);\n              }, 1000);\n            }).then(function (response) {\n              return response;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getTodoListRequest() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction getTodoListItems() {\n  var response;\n  return _regeneratorRuntime.wrap(function getTodoListItems$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(getTodoListRequest);\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return put(getTodoListSuccess(response));\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put(getTodoListError(_context2.t0));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nvar addTodoItemRequest = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n    var items;\n    return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            items = todoData.data; // eslint-disable-next-line no-param-reassign\n\n            item.id = items.length + 1; // eslint-disable-next-line no-param-reassign\n\n            item.createDate = getDateWithFormat();\n            items.splice(0, 0, item); // eslint-disable-next-line no-return-await\n\n            _context3.next = 6;\n            return new Promise(function (success) {\n              setTimeout(function () {\n                success(items);\n              }, 1000);\n            }).then(function (response) {\n              return response;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addTodoItemRequest(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction addTodoItem(_ref3) {\n  var payload, response;\n  return _regeneratorRuntime.wrap(function addTodoItem$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(addTodoItemRequest, payload);\n\n        case 4:\n          response = _context4.sent;\n          _context4.next = 7;\n          return put(addTodoItemSuccess(response));\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 13;\n          return put(addTodoItemError(_context4.t0));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 9]]);\n}\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(TODO_GET_LIST, getTodoListItems);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function wathcAddItem() {\n  return _regeneratorRuntime.wrap(function wathcAddItem$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(TODO_ADD_ITEM, addTodoItem);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked4);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchGetList), fork(wathcAddItem)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/react-pc/src/redux/todo/saga.js"],"names":["getTodoListItems","addTodoItem","watchGetList","wathcAddItem","rootSaga","all","call","fork","put","takeEvery","getDateWithFormat","TODO_GET_LIST","TODO_ADD_ITEM","getTodoListSuccess","getTodoListError","addTodoItemSuccess","addTodoItemError","todoData","getTodoListRequest","Promise","success","setTimeout","data","then","response","catch","error","addTodoItemRequest","item","items","id","length","createDate","splice","payload"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { getDateWithFormat } from '../../helpers/Utils';\r\n\r\nimport { TODO_GET_LIST, TODO_ADD_ITEM } from '../actions';\r\n\r\nimport {\r\n  getTodoListSuccess,\r\n  getTodoListError,\r\n  addTodoItemSuccess,\r\n  addTodoItemError,\r\n} from './actions';\r\n\r\nimport todoData from '../../data/todos.json';\r\n\r\nconst getTodoListRequest = async () => {\r\n  // eslint-disable-next-line no-return-await\r\n  return await new Promise((success) => {\r\n    setTimeout(() => {\r\n      success(todoData.data);\r\n    }, 1000);\r\n  })\r\n    .then((response) => response)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* getTodoListItems() {\r\n  try {\r\n    const response = yield call(getTodoListRequest);\r\n    yield put(getTodoListSuccess(response));\r\n  } catch (error) {\r\n    yield put(getTodoListError(error));\r\n  }\r\n}\r\n\r\nconst addTodoItemRequest = async (item) => {\r\n  const items = todoData.data;\r\n  // eslint-disable-next-line no-param-reassign\r\n  item.id = items.length + 1;\r\n  // eslint-disable-next-line no-param-reassign\r\n  item.createDate = getDateWithFormat();\r\n  items.splice(0, 0, item);\r\n  // eslint-disable-next-line no-return-await\r\n  return await new Promise((success) => {\r\n    setTimeout(() => {\r\n      success(items);\r\n    }, 1000);\r\n  })\r\n    .then((response) => response)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* addTodoItem({ payload }) {\r\n  try {\r\n    const response = yield call(addTodoItemRequest, payload);\r\n    yield put(addTodoItemSuccess(response));\r\n  } catch (error) {\r\n    yield put(addTodoItemError(error));\r\n  }\r\n}\r\n\r\nexport function* watchGetList() {\r\n  yield takeEvery(TODO_GET_LIST, getTodoListItems);\r\n}\r\n\r\nexport function* wathcAddItem() {\r\n  yield takeEvery(TODO_ADD_ITEM, addTodoItem);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(watchGetList), fork(wathcAddItem)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}