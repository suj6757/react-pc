{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react-pc\\\\src\\\\containers\\\\navs\\\\Breadcrumb.js\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = sub => {\n  if (\"/\".concat(sub) === adminRoot) return /*#__PURE__*/_jsxDEV(IntlMessages, {\n    id: \"menu.home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 39\n  }, this);\n  return /*#__PURE__*/_jsxDEV(IntlMessages, {\n    id: \"menu.\".concat(sub)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({\n  heading,\n  match\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [heading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n        id: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItems, {\n      match: match\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = BreadcrumbContainer;\n\nconst BreadcrumbItems = ({\n  match\n}) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter(x => x.indexOf(':') === -1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n      className: \"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\",\n      children: paths.map((sub, index) => {\n        return /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n          active: paths.length === index + 1,\n          children: paths.length !== index + 1 ? /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\".concat(getUrl(path, sub, index)),\n            children: getMenuTitle(sub)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this) : getMenuTitle(sub)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = BreadcrumbItems;\nexport default BreadcrumbContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BreadcrumbContainer\");\n$RefreshReg$(_c2, \"BreadcrumbItems\");","map":{"version":3,"sources":["C:/react-pc/src/containers/navs/Breadcrumb.js"],"names":["React","Breadcrumb","BreadcrumbItem","NavLink","IntlMessages","adminRoot","getMenuTitle","sub","getUrl","path","split","BreadcrumbContainer","heading","match","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","index"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,YAA3C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B,MAAI,WAAIA,GAAJ,MAAcF,SAAlB,EAA6B,oBAAO,QAAC,YAAD;AAAc,IAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AAC7B,sBAAO,QAAC,YAAD;AAAc,IAAA,EAAE,iBAAUE,GAAV;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,CAACC,IAAD,EAAOF,GAAP,KAAe;AAC5B,SAAOE,IAAI,CAACC,KAAL,CAAWH,GAAX,EAAgB,CAAhB,IAAqBA,GAA5B;AACD,CAFD;;AAIA,MAAMI,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAClD,sBACE;AAAA,eACGD,OAAO,iBACN;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CAXD;;KAAMF,mB;;AAaN,MAAMG,eAAe,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAe;AACrC,QAAMJ,IAAI,GAAGI,KAAK,CAACJ,IAAN,CAAWM,MAAX,CAAkB,CAAlB,CAAb;AACA,MAAIC,KAAK,GAAGP,IAAI,CAACC,KAAL,CAAW,GAAX,CAAZ;;AACA,MAAIM,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,CAAwBC,OAAxB,CAAgC,GAAhC,IAAuC,CAAC,CAA5C,EAA+C;AAC7CF,IAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACF,OAAF,CAAU,GAAV,MAAmB,CAAC,CAAxC,CAAR;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,+DAAtB;AAAA,gBACGF,KAAK,CAACK,GAAN,CAAU,CAACd,GAAD,EAAMe,KAAN,KAAgB;AACzB,4BACE,QAAC,cAAD;AAA4B,UAAA,MAAM,EAAEN,KAAK,CAACC,MAAN,KAAiBK,KAAK,GAAG,CAA7D;AAAA,oBACGN,KAAK,CAACC,MAAN,KAAiBK,KAAK,GAAG,CAAzB,gBACC,QAAC,OAAD;AAAS,YAAA,EAAE,aAAMd,MAAM,CAACC,IAAD,EAAOF,GAAP,EAAYe,KAAZ,CAAZ,CAAX;AAAA,sBACGhB,YAAY,CAACC,GAAD;AADf;AAAA;AAAA;AAAA;AAAA,kBADD,GAKCD,YAAY,CAACC,GAAD;AANhB,WAAqBe,KAArB;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD,CAzBD;;MAAMR,e;AA2BN,eAAeH,mBAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      <BreadcrumbItems match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/');\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n"]},"metadata":{},"sourceType":"module"}