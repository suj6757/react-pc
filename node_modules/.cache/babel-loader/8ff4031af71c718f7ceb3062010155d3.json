{"ast":null,"code":"// // eslint-disable-next-line import/no-cycle\nimport { CHAT_GET_CONTACTS, CHAT_GET_CONTACTS_SUCCESS, CHAT_GET_CONTACTS_ERROR, CHAT_GET_CONVERSATIONS, CHAT_GET_CONVERSATIONS_SUCCESS, CHAT_GET_CONVERSATIONS_ERROR, CHAT_ADD_MESSAGE_TO_CONVERSATION, CHAT_CREATE_CONVERSATION, CHAT_SEARCH_CONTACT, CHAT_CHANGE_CONVERSATION } from '../actions';\nexport const getContacts = () => ({\n  type: CHAT_GET_CONTACTS\n});\nexport const getContactsSuccess = (contacts, currentUser) => {\n  return {\n    type: CHAT_GET_CONTACTS_SUCCESS,\n    payload: {\n      contacts,\n      currentUser\n    }\n  };\n};\nexport const getContactsError = error => ({\n  type: CHAT_GET_CONTACTS_ERROR,\n  payload: error\n});\nexport const getConversations = userId => ({\n  type: CHAT_GET_CONVERSATIONS,\n  payload: userId\n});\nexport const getConversationsSuccess = (conversations, selectedUser) => ({\n  type: CHAT_GET_CONVERSATIONS_SUCCESS,\n  payload: {\n    conversations,\n    selectedUser\n  }\n});\nexport const getConversationsError = error => ({\n  type: CHAT_GET_CONVERSATIONS_ERROR,\n  payload: error\n});\nexport const addMessageToConversation = (currentUserId, selectedUserId, message, allConversations) => ({\n  type: CHAT_ADD_MESSAGE_TO_CONVERSATION,\n  payload: {\n    currentUserId,\n    selectedUserId,\n    message,\n    allConversations\n  }\n});\nexport const createConversation = (currentUserId, selectedUserId, allConversations) => {\n  return {\n    type: CHAT_CREATE_CONVERSATION,\n    payload: {\n      currentUserId,\n      selectedUserId,\n      allConversations\n    }\n  };\n};\nexport const searchContact = keyword => ({\n  type: CHAT_SEARCH_CONTACT,\n  payload: keyword\n});\nexport const changeConversation = userId => ({\n  type: CHAT_CHANGE_CONVERSATION,\n  payload: userId\n});","map":{"version":3,"sources":["C:/react-pc/src/redux/chat/actions.js"],"names":["CHAT_GET_CONTACTS","CHAT_GET_CONTACTS_SUCCESS","CHAT_GET_CONTACTS_ERROR","CHAT_GET_CONVERSATIONS","CHAT_GET_CONVERSATIONS_SUCCESS","CHAT_GET_CONVERSATIONS_ERROR","CHAT_ADD_MESSAGE_TO_CONVERSATION","CHAT_CREATE_CONVERSATION","CHAT_SEARCH_CONTACT","CHAT_CHANGE_CONVERSATION","getContacts","type","getContactsSuccess","contacts","currentUser","payload","getContactsError","error","getConversations","userId","getConversationsSuccess","conversations","selectedUser","getConversationsError","addMessageToConversation","currentUserId","selectedUserId","message","allConversations","createConversation","searchContact","keyword","changeConversation"],"mappings":"AAAA;AACA,SACEA,iBADF,EAEEC,yBAFF,EAGEC,uBAHF,EAIEC,sBAJF,EAKEC,8BALF,EAMEC,4BANF,EAOEC,gCAPF,EAQEC,wBARF,EASEC,mBATF,EAUEC,wBAVF,QAWO,YAXP;AAaA,OAAO,MAAMC,WAAW,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAEX;AAD0B,CAAP,CAApB;AAIP,OAAO,MAAMY,kBAAkB,GAAG,CAACC,QAAD,EAAWC,WAAX,KAA2B;AAC3D,SAAO;AACLH,IAAAA,IAAI,EAAEV,yBADD;AAELc,IAAAA,OAAO,EAAE;AAAEF,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAIC,KAAD,KAAY;AAC1CN,EAAAA,IAAI,EAAET,uBADoC;AAE1Ca,EAAAA,OAAO,EAAEE;AAFiC,CAAZ,CAAzB;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,KAAa;AAC3CR,EAAAA,IAAI,EAAER,sBADqC;AAE3CY,EAAAA,OAAO,EAAEI;AAFkC,CAAb,CAAzB;AAIP,OAAO,MAAMC,uBAAuB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,MAAkC;AACvEX,EAAAA,IAAI,EAAEP,8BADiE;AAEvEW,EAAAA,OAAO,EAAE;AAAEM,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB;AAF8D,CAAlC,CAAhC;AAKP,OAAO,MAAMC,qBAAqB,GAAIN,KAAD,KAAY;AAC/CN,EAAAA,IAAI,EAAEN,4BADyC;AAE/CU,EAAAA,OAAO,EAAEE;AAFsC,CAAZ,CAA9B;AAKP,OAAO,MAAMO,wBAAwB,GAAG,CACtCC,aADsC,EAEtCC,cAFsC,EAGtCC,OAHsC,EAItCC,gBAJsC,MAKlC;AACJjB,EAAAA,IAAI,EAAEL,gCADF;AAEJS,EAAAA,OAAO,EAAE;AAAEU,IAAAA,aAAF;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,OAAjC;AAA0CC,IAAAA;AAA1C;AAFL,CALkC,CAAjC;AAUP,OAAO,MAAMC,kBAAkB,GAAG,CAChCJ,aADgC,EAEhCC,cAFgC,EAGhCE,gBAHgC,KAI7B;AACH,SAAO;AACLjB,IAAAA,IAAI,EAAEJ,wBADD;AAELQ,IAAAA,OAAO,EAAE;AAAEU,MAAAA,aAAF;AAAiBC,MAAAA,cAAjB;AAAiCE,MAAAA;AAAjC;AAFJ,GAAP;AAID,CATM;AAWP,OAAO,MAAME,aAAa,GAAIC,OAAD,KAAc;AACzCpB,EAAAA,IAAI,EAAEH,mBADmC;AAEzCO,EAAAA,OAAO,EAAEgB;AAFgC,CAAd,CAAtB;AAKP,OAAO,MAAMC,kBAAkB,GAAIb,MAAD,KAAa;AAC7CR,EAAAA,IAAI,EAAEF,wBADuC;AAE7CM,EAAAA,OAAO,EAAEI;AAFoC,CAAb,CAA3B","sourcesContent":["// // eslint-disable-next-line import/no-cycle\r\nimport {\r\n  CHAT_GET_CONTACTS,\r\n  CHAT_GET_CONTACTS_SUCCESS,\r\n  CHAT_GET_CONTACTS_ERROR,\r\n  CHAT_GET_CONVERSATIONS,\r\n  CHAT_GET_CONVERSATIONS_SUCCESS,\r\n  CHAT_GET_CONVERSATIONS_ERROR,\r\n  CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n  CHAT_CREATE_CONVERSATION,\r\n  CHAT_SEARCH_CONTACT,\r\n  CHAT_CHANGE_CONVERSATION,\r\n} from '../actions';\r\n\r\nexport const getContacts = () => ({\r\n  type: CHAT_GET_CONTACTS,\r\n});\r\n\r\nexport const getContactsSuccess = (contacts, currentUser) => {\r\n  return {\r\n    type: CHAT_GET_CONTACTS_SUCCESS,\r\n    payload: { contacts, currentUser },\r\n  };\r\n};\r\n\r\nexport const getContactsError = (error) => ({\r\n  type: CHAT_GET_CONTACTS_ERROR,\r\n  payload: error,\r\n});\r\n\r\nexport const getConversations = (userId) => ({\r\n  type: CHAT_GET_CONVERSATIONS,\r\n  payload: userId,\r\n});\r\nexport const getConversationsSuccess = (conversations, selectedUser) => ({\r\n  type: CHAT_GET_CONVERSATIONS_SUCCESS,\r\n  payload: { conversations, selectedUser },\r\n});\r\n\r\nexport const getConversationsError = (error) => ({\r\n  type: CHAT_GET_CONVERSATIONS_ERROR,\r\n  payload: error,\r\n});\r\n\r\nexport const addMessageToConversation = (\r\n  currentUserId,\r\n  selectedUserId,\r\n  message,\r\n  allConversations\r\n) => ({\r\n  type: CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n  payload: { currentUserId, selectedUserId, message, allConversations },\r\n});\r\n\r\nexport const createConversation = (\r\n  currentUserId,\r\n  selectedUserId,\r\n  allConversations\r\n) => {\r\n  return {\r\n    type: CHAT_CREATE_CONVERSATION,\r\n    payload: { currentUserId, selectedUserId, allConversations },\r\n  };\r\n};\r\n\r\nexport const searchContact = (keyword) => ({\r\n  type: CHAT_SEARCH_CONTACT,\r\n  payload: keyword,\r\n});\r\n\r\nexport const changeConversation = (userId) => ({\r\n  type: CHAT_CHANGE_CONVERSATION,\r\n  payload: userId,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}