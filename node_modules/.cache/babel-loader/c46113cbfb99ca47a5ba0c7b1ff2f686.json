{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\react-pc\\\\src\\\\views\\\\user\\\\forgot-password.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { forgotPassword } from '../../redux/actions';\nimport { NotificationManager } from '../../components/common/react-notifications';\n\nconst validateEmail = value => {\n  let error;\n\n  if (!value) {\n    error = 'Please enter your email address';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n};\n\nconst ForgotPassword = ({\n  history,\n  forgotUserMail,\n  loading,\n  error,\n  forgotPasswordAction\n}) => {\n  _s();\n\n  const _useState = useState('demo@coloredstrategies.com'),\n        _useState2 = _slicedToArray(_useState, 1),\n        email = _useState2[0];\n\n  const onForgotPassword = values => {\n    if (!loading) {\n      if (values.email !== '') {\n        forgotPasswordAction(values, history);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (error) {\n      NotificationManager.warning(error, 'Forgot Password Error', 3000, null, null, '');\n    } else if (!loading && forgotUserMail === 'success') NotificationManager.success('Please check your email.', 'Forgot Password Success', 3000, null, null, '');\n  }, [error, forgotUserMail, loading]);\n  const initialValues = {\n    email\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"h-100\",\n    children: /*#__PURE__*/_jsxDEV(Colxx, {\n      xxs: \"12\",\n      md: \"10\",\n      className: \"mx-auto my-auto\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative image-side \",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white h2\",\n            children: \"MAGIC IS IN THE DETAILS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"white mb-0\",\n            children: [\"Please use your e-mail to reset your password. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 62\n            }, this), \"If you are not a member, please\", ' ', /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/user/register\",\n              className: \"white\",\n              children: \"register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-side\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            className: \"white\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-single\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n              id: \"user.forgot-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            onSubmit: onForgotPassword,\n            children: ({\n              errors,\n              touched\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              className: \"av-tooltip tooltip-label-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"form-group has-float-label\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"user.email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  name: \"email\",\n                  validate: validateEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback d-block\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                  to: \"/user/forgot-password\",\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"user.forgot-password-question\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  className: \"btn-shadow btn-multiple-state \".concat(loading ? 'show-spinner' : ''),\n                  size: \"lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"spinner d-inline-block\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bounce1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bounce2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bounce3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"label\",\n                    children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                      id: \"user.reset-password-button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"ESXasSGLA8tYF7CJGDtQSs9c/iY=\");\n\n_c = ForgotPassword;\n\nconst mapStateToProps = ({\n  authUser\n}) => {\n  const forgotUserMail = authUser.forgotUserMail,\n        loading = authUser.loading,\n        error = authUser.error;\n  return {\n    forgotUserMail,\n    loading,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  forgotPasswordAction: forgotPassword\n})(ForgotPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/react-pc/src/views/user/forgot-password.js"],"names":["React","useState","useEffect","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","Formik","Form","Field","connect","Colxx","IntlMessages","forgotPassword","NotificationManager","validateEmail","value","error","test","ForgotPassword","history","forgotUserMail","loading","forgotPasswordAction","email","onForgotPassword","values","warning","success","initialValues","errors","touched","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { forgotPassword } from '../../redux/actions';\r\nimport { NotificationManager } from '../../components/common/react-notifications';\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Please enter your email address';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = 'Invalid email address';\r\n  }\r\n  return error;\r\n};\r\n\r\nconst ForgotPassword = ({\r\n  history,\r\n  forgotUserMail,\r\n  loading,\r\n  error,\r\n  forgotPasswordAction,\r\n}) => {\r\n  const [email] = useState('demo@coloredstrategies.com');\r\n\r\n  const onForgotPassword = (values) => {\r\n    if (!loading) {\r\n      if (values.email !== '') {\r\n        forgotPasswordAction(values, history);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      NotificationManager.warning(\r\n        error,\r\n        'Forgot Password Error',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n    } else if (!loading && forgotUserMail === 'success')\r\n      NotificationManager.success(\r\n        'Please check your email.',\r\n        'Forgot Password Success',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n  }, [error, forgotUserMail, loading]);\r\n\r\n  const initialValues = { email };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n            <p className=\"white mb-0\">\r\n              Please use your e-mail to reset your password. <br />\r\n              If you are not a member, please{' '}\r\n              <NavLink to=\"/user/register\" className=\"white\">\r\n                register\r\n              </NavLink>\r\n              .\r\n            </p>\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">\r\n              <IntlMessages id=\"user.forgot-password\" />\r\n            </CardTitle>\r\n\r\n            <Formik initialValues={initialValues} onSubmit={onForgotPassword}>\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>\r\n                      <IntlMessages id=\"user.email\" />\r\n                    </Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      validate={validateEmail}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.email}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <NavLink to=\"/user/forgot-password\">\r\n                      <IntlMessages id=\"user.forgot-password-question\" />\r\n                    </NavLink>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? 'show-spinner' : ''\r\n                      }`}\r\n                      size=\"lg\"\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        <IntlMessages id=\"user.reset-password-button\" />\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { forgotUserMail, loading, error } = authUser;\r\n  return { forgotUserMail, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  forgotPasswordAction: forgotPassword,\r\n})(ForgotPassword);\r\n"]},"metadata":{},"sourceType":"module"}