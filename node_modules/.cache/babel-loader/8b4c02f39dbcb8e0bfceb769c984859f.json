{"ast":null,"code":"import _objectSpread from \"C:/React/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:/React/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/React/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchLoginUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loginWithEmailPassword),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchRegisterUser),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(registerWithEmailPassword),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogoutUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchForgotPassword),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(forgotPassword),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchResetPassword),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(resetPassword),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { auth } from '../../helpers/Firebase';\nimport { LOGIN_USER, REGISTER_USER, LOGOUT_USER, FORGOT_PASSWORD, RESET_PASSWORD } from '../actions';\nimport { loginUserSuccess, loginUserError, registerUserSuccess, registerUserError, forgotPasswordSuccess, forgotPasswordError, resetPasswordSuccess, resetPasswordError } from './actions';\nimport { adminRoot, currentUser } from '../../constants/defaultValues';\nimport { setCurrentUser } from '../../helpers/Utils';\nexport function watchLoginUser() {\n  return _regeneratorRuntime.wrap(function watchLoginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(LOGIN_USER, loginWithEmailPassword);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nvar loginWithEmailPasswordAsync = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return auth.signInWithEmailAndPassword(email, password).then(function (user) {\n              return user;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginWithEmailPasswordAsync(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction loginWithEmailPassword(_ref2) {\n  var payload, _payload$user, email, password, history, loginUser, item;\n\n  return _regeneratorRuntime.wrap(function loginWithEmailPassword$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref2.payload;\n          _payload$user = payload.user, email = _payload$user.email, password = _payload$user.password;\n          history = payload.history;\n          _context3.prev = 3;\n          _context3.next = 6;\n          return call(loginWithEmailPasswordAsync, email, password);\n\n        case 6:\n          loginUser = _context3.sent;\n\n          if (loginUser.message) {\n            _context3.next = 15;\n            break;\n          }\n\n          item = _objectSpread({\n            uid: loginUser.user.uid\n          }, currentUser);\n          setCurrentUser(item);\n          _context3.next = 12;\n          return put(loginUserSuccess(item));\n\n        case 12:\n          history.push(adminRoot);\n          _context3.next = 17;\n          break;\n\n        case 15:\n          _context3.next = 17;\n          return put(loginUserError(loginUser.message));\n\n        case 17:\n          _context3.next = 23;\n          break;\n\n        case 19:\n          _context3.prev = 19;\n          _context3.t0 = _context3[\"catch\"](3);\n          _context3.next = 23;\n          return put(loginUserError(_context3.t0));\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[3, 19]]);\n}\n\nexport function watchRegisterUser() {\n  return _regeneratorRuntime.wrap(function watchRegisterUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(REGISTER_USER, registerWithEmailPassword);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}\n\nvar registerWithEmailPasswordAsync = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return auth.createUserWithEmailAndPassword(email, password).then(function (user) {\n              return user;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function registerWithEmailPasswordAsync(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction registerWithEmailPassword(_ref4) {\n  var payload, _payload$user2, email, password, history, registerUser, item;\n\n  return _regeneratorRuntime.wrap(function registerWithEmailPassword$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref4.payload;\n          _payload$user2 = payload.user, email = _payload$user2.email, password = _payload$user2.password;\n          history = payload.history;\n          _context6.prev = 3;\n          _context6.next = 6;\n          return call(registerWithEmailPasswordAsync, email, password);\n\n        case 6:\n          registerUser = _context6.sent;\n\n          if (registerUser.message) {\n            _context6.next = 15;\n            break;\n          }\n\n          item = _objectSpread({\n            uid: registerUser.user.uid\n          }, currentUser);\n          setCurrentUser(item);\n          _context6.next = 12;\n          return put(registerUserSuccess(item));\n\n        case 12:\n          history.push(adminRoot);\n          _context6.next = 17;\n          break;\n\n        case 15:\n          _context6.next = 17;\n          return put(registerUserError(registerUser.message));\n\n        case 17:\n          _context6.next = 23;\n          break;\n\n        case 19:\n          _context6.prev = 19;\n          _context6.t0 = _context6[\"catch\"](3);\n          _context6.next = 23;\n          return put(registerUserError(_context6.t0));\n\n        case 23:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked4, null, [[3, 19]]);\n}\n\nexport function watchLogoutUser() {\n  return _regeneratorRuntime.wrap(function watchLogoutUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(LOGOUT_USER, logout);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked5);\n}\n\nvar logoutAsync = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(history) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return auth.signOut().then(function (user) {\n              return user;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            history.push(adminRoot);\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function logoutAsync(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nfunction logout(_ref6) {\n  var payload, history;\n  return _regeneratorRuntime.wrap(function logout$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref6.payload;\n          history = payload.history;\n          setCurrentUser();\n          _context9.next = 5;\n          return call(logoutAsync, history);\n\n        case 5:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport function watchForgotPassword() {\n  return _regeneratorRuntime.wrap(function watchForgotPassword$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FORGOT_PASSWORD, forgotPassword);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked7);\n}\n\nvar forgotPasswordAsync = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return auth.sendPasswordResetEmail(email).then(function (user) {\n              return user;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context11.abrupt(\"return\", _context11.sent);\n\n          case 3:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function forgotPasswordAsync(_x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nfunction forgotPassword(_ref8) {\n  var payload, email, forgotPasswordStatus;\n  return _regeneratorRuntime.wrap(function forgotPassword$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          payload = _ref8.payload;\n          email = payload.forgotUserMail.email;\n          _context12.prev = 2;\n          _context12.next = 5;\n          return call(forgotPasswordAsync, email);\n\n        case 5:\n          forgotPasswordStatus = _context12.sent;\n\n          if (forgotPasswordStatus) {\n            _context12.next = 11;\n            break;\n          }\n\n          _context12.next = 9;\n          return put(forgotPasswordSuccess('success'));\n\n        case 9:\n          _context12.next = 13;\n          break;\n\n        case 11:\n          _context12.next = 13;\n          return put(forgotPasswordError(forgotPasswordStatus.message));\n\n        case 13:\n          _context12.next = 19;\n          break;\n\n        case 15:\n          _context12.prev = 15;\n          _context12.t0 = _context12[\"catch\"](2);\n          _context12.next = 19;\n          return put(forgotPasswordError(_context12.t0));\n\n        case 19:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked8, null, [[2, 15]]);\n}\n\nexport function watchResetPassword() {\n  return _regeneratorRuntime.wrap(function watchResetPassword$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(RESET_PASSWORD, resetPassword);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked9);\n}\n\nvar resetPasswordAsync = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resetPasswordCode, newPassword) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return auth.confirmPasswordReset(resetPasswordCode, newPassword).then(function (user) {\n              return user;\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 2:\n            return _context14.abrupt(\"return\", _context14.sent);\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function resetPasswordAsync(_x7, _x8) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nfunction resetPassword(_ref10) {\n  var payload, newPassword, resetPasswordCode, resetPasswordStatus;\n  return _regeneratorRuntime.wrap(function resetPassword$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          payload = _ref10.payload;\n          newPassword = payload.newPassword, resetPasswordCode = payload.resetPasswordCode;\n          _context15.prev = 2;\n          _context15.next = 5;\n          return call(resetPasswordAsync, resetPasswordCode, newPassword);\n\n        case 5:\n          resetPasswordStatus = _context15.sent;\n\n          if (resetPasswordStatus) {\n            _context15.next = 11;\n            break;\n          }\n\n          _context15.next = 9;\n          return put(resetPasswordSuccess('success'));\n\n        case 9:\n          _context15.next = 13;\n          break;\n\n        case 11:\n          _context15.next = 13;\n          return put(resetPasswordError(resetPasswordStatus.message));\n\n        case 13:\n          _context15.next = 19;\n          break;\n\n        case 15:\n          _context15.prev = 15;\n          _context15.t0 = _context15[\"catch\"](2);\n          _context15.next = 19;\n          return put(resetPasswordError(_context15.t0));\n\n        case 19:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked10, null, [[2, 15]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgotPassword), fork(watchResetPassword)]);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/React/react-pc/src/redux/auth/saga.js"],"names":["watchLoginUser","loginWithEmailPassword","watchRegisterUser","registerWithEmailPassword","watchLogoutUser","logout","watchForgotPassword","forgotPassword","watchResetPassword","resetPassword","rootSaga","all","call","fork","put","takeEvery","auth","LOGIN_USER","REGISTER_USER","LOGOUT_USER","FORGOT_PASSWORD","RESET_PASSWORD","loginUserSuccess","loginUserError","registerUserSuccess","registerUserError","forgotPasswordSuccess","forgotPasswordError","resetPasswordSuccess","resetPasswordError","adminRoot","currentUser","setCurrentUser","loginWithEmailPasswordAsync","email","password","signInWithEmailAndPassword","then","user","catch","error","payload","history","loginUser","message","item","uid","push","registerWithEmailPasswordAsync","createUserWithEmailAndPassword","registerUser","logoutAsync","signOut","forgotPasswordAsync","sendPasswordResetEmail","forgotUserMail","forgotPasswordStatus","resetPasswordAsync","resetPasswordCode","newPassword","confirmPasswordReset","resetPasswordStatus"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { auth } from '../../helpers/Firebase';\r\nimport {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  LOGOUT_USER,\r\n  FORGOT_PASSWORD,\r\n  RESET_PASSWORD,\r\n} from '../actions';\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserError,\r\n  registerUserSuccess,\r\n  registerUserError,\r\n  forgotPasswordSuccess,\r\n  forgotPasswordError,\r\n  resetPasswordSuccess,\r\n  resetPasswordError,\r\n} from './actions';\r\n\r\nimport { adminRoot, currentUser } from '../../constants/defaultValues';\r\nimport { setCurrentUser } from '../../helpers/Utils';\r\n\r\nexport function* watchLoginUser() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(LOGIN_USER, loginWithEmailPassword);\r\n}\r\n\r\nconst loginWithEmailPasswordAsync = async (email, password) =>\r\n  // eslint-disable-next-line no-return-await\r\n  await auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n\r\nfunction* loginWithEmailPassword({ payload }) {\r\n  const { email, password } = payload.user;\r\n  const { history } = payload;\r\n  try {\r\n    const loginUser = yield call(loginWithEmailPasswordAsync, email, password);\r\n    if (!loginUser.message) {\r\n      const item = { uid: loginUser.user.uid, ...currentUser };\r\n      setCurrentUser(item);\r\n      yield put(loginUserSuccess(item));\r\n      history.push(adminRoot);\r\n    } else {\r\n      yield put(loginUserError(loginUser.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(loginUserError(error));\r\n  }\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(REGISTER_USER, registerWithEmailPassword);\r\n}\r\n\r\nconst registerWithEmailPasswordAsync = async (email, password) =>\r\n  // eslint-disable-next-line no-return-await\r\n  await auth\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n\r\nfunction* registerWithEmailPassword({ payload }) {\r\n  const { email, password } = payload.user;\r\n  const { history } = payload;\r\n  try {\r\n    const registerUser = yield call(\r\n      registerWithEmailPasswordAsync,\r\n      email,\r\n      password\r\n    );\r\n    if (!registerUser.message) {\r\n      const item = { uid: registerUser.user.uid, ...currentUser };\r\n      setCurrentUser(item);\r\n      yield put(registerUserSuccess(item));\r\n      history.push(adminRoot);\r\n    } else {\r\n      yield put(registerUserError(registerUser.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(registerUserError(error));\r\n  }\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nconst logoutAsync = async (history) => {\r\n  await auth\r\n    .signOut()\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n  history.push(adminRoot);\r\n};\r\n\r\nfunction* logout({ payload }) {\r\n  const { history } = payload;\r\n  setCurrentUser();\r\n  yield call(logoutAsync, history);\r\n}\r\n\r\nexport function* watchForgotPassword() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(FORGOT_PASSWORD, forgotPassword);\r\n}\r\n\r\nconst forgotPasswordAsync = async (email) => {\r\n  // eslint-disable-next-line no-return-await\r\n  return await auth\r\n    .sendPasswordResetEmail(email)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* forgotPassword({ payload }) {\r\n  const { email } = payload.forgotUserMail;\r\n  try {\r\n    const forgotPasswordStatus = yield call(forgotPasswordAsync, email);\r\n    if (!forgotPasswordStatus) {\r\n      yield put(forgotPasswordSuccess('success'));\r\n    } else {\r\n      yield put(forgotPasswordError(forgotPasswordStatus.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(forgotPasswordError(error));\r\n  }\r\n}\r\n\r\nexport function* watchResetPassword() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(RESET_PASSWORD, resetPassword);\r\n}\r\n\r\nconst resetPasswordAsync = async (resetPasswordCode, newPassword) => {\r\n  // eslint-disable-next-line no-return-await\r\n  return await auth\r\n    .confirmPasswordReset(resetPasswordCode, newPassword)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* resetPassword({ payload }) {\r\n  const { newPassword, resetPasswordCode } = payload;\r\n  try {\r\n    const resetPasswordStatus = yield call(\r\n      resetPasswordAsync,\r\n      resetPasswordCode,\r\n      newPassword\r\n    );\r\n    if (!resetPasswordStatus) {\r\n      yield put(resetPasswordSuccess('success'));\r\n    } else {\r\n      yield put(resetPasswordError(resetPasswordStatus.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(resetPasswordError(error));\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgotPassword),\r\n    fork(watchResetPassword),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}