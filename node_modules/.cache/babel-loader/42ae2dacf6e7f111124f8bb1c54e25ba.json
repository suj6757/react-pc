{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectSpread from \"C:/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/react-pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\react-pc\\\\src\\\\components\\\\charts\\\\Line.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport { lineChartOptions } from './config';\n\nconst Line = ({\n  height\n}) => {\n  _s();\n\n  //라인 옵션\n  const _React$useState = React.useState(lineChartOptions),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        lineOption = _React$useState2[0],\n        setLineOption = _React$useState2[1]; //서버에 보낼 파라미터\n\n\n  const _React$useState3 = React.useState({\n    FromDate: \"2021-05-01\",\n    ToDate: \"2021-05-10\",\n    Category1: \"패션의류\",\n    Category2: \"여성의류\",\n    Category3: \"티셔츠\",\n    Keyword: \"켈린클라인\"\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        resParam = _React$useState4[0],\n        setResParam = _React$useState4[1]; //서버 호출 후 받는 데이터\n\n\n  const _React$useState5 = React.useState({\n    TrendData: [{\n      date: '2019-05-01',\n      Value: 0.2\n    }, {\n      date: '2019-05-02',\n      Value: 0.3\n    }, {\n      date: '2019-05-03',\n      Value: 0.4\n    }, {\n      date: '2019-05-04',\n      Value: 0.5\n    }, {\n      date: '2019-05-05',\n      Value: 0.2\n    }, {\n      date: '2019-05-06',\n      Value: 0.9\n    }, {\n      date: '2019-05-07',\n      Value: 0.3\n    }, {\n      date: '2019-05-08',\n      Value: 0.2\n    }, {\n      date: '2019-05-09',\n      Value: 0.6\n    }, {\n      date: '2019-05-10',\n      Value: 0.3\n    }]\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        resData = _React$useState6[0],\n        setResData = _React$useState6[1];\n\n  React.useEffect(() => {\n    var data = [];\n    var category = [];\n    resData.TrendData.map(res => {\n      data.push(res.Value);\n      category.push(res.date);\n    });\n    console.log(data);\n    console.log(category);\n    setLineOption({\n      series: [{\n        name: \"value\",\n        data: data\n      }],\n      options: _objectSpread(_objectSpread({}, lineOption.options), {}, {\n        color: _objectSpread({}, lineOption.options.colors),\n        dataLabels: _objectSpread({}, lineOption.options.dataLabels),\n        stroke: _objectSpread({}, lineOption.options.stroke),\n        title: _objectSpread(_objectSpread({}, lineOption.options.title), {}, {\n          text: ''\n        }),\n        grid: _objectSpread({}, lineOption.options.grid),\n        markers: _objectSpread({}, lineOption.options.markers),\n        xaxis: {\n          categories: category,\n          title: {\n            text: ''\n          }\n        },\n        yaxis: _objectSpread({}, lineOption.yaxis),\n        legend: _objectSpread({}, lineOption.legend)\n      })\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactApexChart, {\n    options: lineOption.options,\n    series: lineOption.series,\n    type: \"line\",\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line, \"0PA3yn+X02bUwTmQ441l+Vi5DpI=\");\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["C:/react-pc/src/components/charts/Line.js"],"names":["React","ReactApexChart","lineChartOptions","Line","height","useState","lineOption","setLineOption","FromDate","ToDate","Category1","Category2","Category3","Keyword","resParam","setResParam","TrendData","date","Value","resData","setResData","useEffect","data","category","map","res","push","console","log","series","name","options","color","colors","dataLabels","stroke","title","text","grid","markers","xaxis","categories","yaxis","legend"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,UAAjC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACvB;AADuB,0BAEaJ,KAAK,CAACK,QAAN,CAAeH,gBAAf,CAFb;AAAA;AAAA,QAEhBI,UAFgB;AAAA,QAEJC,aAFI,wBAGvB;;;AAHuB,2BAISP,KAAK,CAACK,QAAN,CAAe;AAC3CG,IAAAA,QAAQ,EAAG,YADgC;AAE3CC,IAAAA,MAAM,EAAG,YAFkC;AAG3CC,IAAAA,SAAS,EAAG,MAH+B;AAI3CC,IAAAA,SAAS,EAAG,MAJ+B;AAK3CC,IAAAA,SAAS,EAAG,KAL+B;AAM3CC,IAAAA,OAAO,EAAG;AANiC,GAAf,CAJT;AAAA;AAAA,QAIhBC,QAJgB;AAAA,QAINC,WAJM,wBAYvB;;;AAZuB,2BAaOf,KAAK,CAACK,QAAN,CAAe;AACzCW,IAAAA,SAAS,EAAE,CACP;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KADO,EAEP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAFO,EAGP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAHO,EAIP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAJO,EAKP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KALO,EAMP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KANO,EAOP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAPO,EAQP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KARO,EASP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KATO,EAUP;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAVO;AAD8B,GAAf,CAbP;AAAA;AAAA,QAahBC,OAbgB;AAAA,QAaPC,UAbO;;AA4BvBpB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,QAAQ,GAAG,EAAf;AAEAJ,IAAAA,OAAO,CAACH,SAAR,CAAkBQ,GAAlB,CAAuBC,GAAD,IAAS;AAC3BH,MAAAA,IAAI,CAACI,IAAL,CAAUD,GAAG,CAACP,KAAd;AACAK,MAAAA,QAAQ,CAACG,IAAT,CAAcD,GAAG,CAACR,IAAlB;AACH,KAHD;AAKAU,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEAhB,IAAAA,aAAa,CAAC;AACVsB,MAAAA,MAAM,EAAE,CAAC;AACLC,QAAAA,IAAI,EAAG,OADF;AAELR,QAAAA,IAAI,EAAGA;AAFF,OAAD,CADE;AAKVS,MAAAA,OAAO,kCACAzB,UAAU,CAACyB,OADX;AAGHC,QAAAA,KAAK,oBACE1B,UAAU,CAACyB,OAAX,CAAmBE,MADrB,CAHF;AAMHC,QAAAA,UAAU,oBACH5B,UAAU,CAACyB,OAAX,CAAmBG,UADhB,CANP;AASHC,QAAAA,MAAM,oBACC7B,UAAU,CAACyB,OAAX,CAAmBI,MADpB,CATH;AAYHC,QAAAA,KAAK,kCACE9B,UAAU,CAACyB,OAAX,CAAmBK,KADrB;AAEDC,UAAAA,IAAI,EAAG;AAFN,UAZF;AAgBHC,QAAAA,IAAI,oBACGhC,UAAU,CAACyB,OAAX,CAAmBO,IADtB,CAhBD;AAmBHC,QAAAA,OAAO,oBACAjC,UAAU,CAACyB,OAAX,CAAmBQ,OADnB,CAnBJ;AAsBHC,QAAAA,KAAK,EAAG;AACJC,UAAAA,UAAU,EAAGlB,QADT;AAEJa,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE;AADH;AAFH,SAtBL;AA4BHK,QAAAA,KAAK,oBACEpC,UAAU,CAACoC,KADb,CA5BF;AA+BHC,QAAAA,MAAM,oBACCrC,UAAU,CAACqC,MADZ;AA/BH;AALG,KAAD,CAAb;AAyCH,GArDD,EAqDG,EArDH;AAuDA,sBACI,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAErC,UAAU,CAACyB,OAApC;AAA6C,IAAA,MAAM,EAAEzB,UAAU,CAACuB,MAAhE;AAAwE,IAAA,IAAI,EAAC,MAA7E;AAAoF,IAAA,MAAM,EAAEzB;AAA5F;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAtFD;;GAAMD,I;;KAAAA,I;AAwFN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { lineChartOptions } from './config';\r\n\r\nconst Line = ({height}) => {\r\n    //라인 옵션\r\n    const [lineOption, setLineOption] = React.useState(lineChartOptions);\r\n    //서버에 보낼 파라미터\r\n    const [resParam, setResParam] = React.useState({\r\n        FromDate : \"2021-05-01\",\r\n        ToDate : \"2021-05-10\",\r\n        Category1 : \"패션의류\",\r\n        Category2 : \"여성의류\",\r\n        Category3 : \"티셔츠\",\r\n        Keyword : \"켈린클라인\"\r\n    });\r\n    //서버 호출 후 받는 데이터\r\n    const [resData, setResData] = React.useState({\r\n        TrendData: [\r\n            { date: '2019-05-01', Value: 0.2 },\r\n            { date: '2019-05-02', Value: 0.3 },\r\n            { date: '2019-05-03', Value: 0.4 },\r\n            { date: '2019-05-04', Value: 0.5 },\r\n            { date: '2019-05-05', Value: 0.2 },\r\n            { date: '2019-05-06', Value: 0.9 },\r\n            { date: '2019-05-07', Value: 0.3 },\r\n            { date: '2019-05-08', Value: 0.2 },\r\n            { date: '2019-05-09', Value: 0.6 },\r\n            { date: '2019-05-10', Value: 0.3 }\r\n        ]\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        var data = [];\r\n        var category = [];\r\n\r\n        resData.TrendData.map((res) => {\r\n            data.push(res.Value);\r\n            category.push(res.date);\r\n        });\r\n\r\n        console.log(data);\r\n        console.log(category);\r\n        \r\n        setLineOption({\r\n            series: [{\r\n                name : \"value\",\r\n                data : data\r\n            }],\r\n            options: {\r\n                ...lineOption.options,\r\n                \r\n                color : {\r\n                    ...lineOption.options.colors\r\n                },\r\n                dataLabels : {\r\n                    ...lineOption.options.dataLabels\r\n                },\r\n                stroke : {\r\n                    ...lineOption.options.stroke\r\n                },\r\n                title : {\r\n                    ...lineOption.options.title,\r\n                    text : ''\r\n                },\r\n                grid : {\r\n                    ...lineOption.options.grid\r\n                },\r\n                markers : {\r\n                    ...lineOption.options.markers\r\n                },\r\n                xaxis : {\r\n                    categories : category,\r\n                    title: {\r\n                        text: ''\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    ...lineOption.yaxis\r\n                },\r\n                legend: {\r\n                    ...lineOption.legend\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <ReactApexChart options={lineOption.options} series={lineOption.series} type=\"line\" height={height} />\r\n    );\r\n};\r\n\r\nexport default Line;"]},"metadata":{},"sourceType":"module"}